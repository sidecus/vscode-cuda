# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker image

on:
  push:
    branches: ['main']

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: sidecus/torch-devcontainer

      - name: Generate 7digit commit sha
        id: generate_sha
        run: echo "::set-output name=shortsha::$(git rev-parse --short=7 HEAD)"

      - name: Pre-build dev container image
        uses: devcontainers/ci@v0.3
        # use env to pass build args to devcontainer ci extension
        # this will be picked up by the ci when processing devcontainer.json
        env:
          TORCH_VERSION: ${{ vars.TORCH_VERSION }}
          CUDA_VERSION: ${{ vars.CUDA_VERSION }}
          CUDNN_VERSION: ${{ vars.CUDNN_VERSION }}
        with:
          imageName: sidecus/torch-devcontainer
          imageTag: ${{ vars.TORCH_VERSION }}.${{ steps.generate_sha.outputs.shortsha }}
          cacheFrom: sidecus/torch-devcontainer:latest
          push: always

      - name: Pre-build dev container image (cn version)
        uses: devcontainers/ci@v0.3
        # use env to pass build args to devcontainer ci extension
        # this will be picked up by the ci when processing devcontainer.json
        env:
          TORCH_VERSION: ${{ vars.TORCH_VERSION }}
          CUDA_VERSION: ${{ vars.CUDA_VERSION }}
          CUDNN_VERSION: ${{ vars.CUDNN_VERSION }}
          UBUNTU_MIRROR: ${{ vars.UBUNTU_MIRROR }}
          PYPI_MIRROR: ${{ vars.PYPI_MIRROR }}
        with:
          imageName: sidecus/torch-devcontainer
          imageTag: cn.${{ vars.TORCH_VERSION }}.${{ steps.generate_sha.outputs.shortsha }}
          cacheFrom: sidecus/torch-devcontainer:latest
          push: always